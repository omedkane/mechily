
import 'package:mechily/AppStyle.dart';
import 'package:mechily/Components/CircledIcon.dart';
import 'package:mechily/Components/SwitchIconButton.dart';
import 'package:mechily/Misc/misc.dart';
import 'package:mechily/Components/MyIconButton.dart';
import 'package:mechily/Components/QuickOption.dart';
import 'package:mechily/Components/RadiusButton.dart';
import 'package:mechily/Components/SweetTitle.dart';
import 'package:mechily/Models/OneOrder.dart';
import 'package:mechily/Models/OnePreset.dart';
import 'package:mechily/Pages/BasketScreen/DetailsDialogModel.dart';
import 'package:flutter/material.dart';
import 'package:flutter_icons/flutter_icons.dart';
import 'package:get/get.dart';

class OrderDetailsDialog extends StatelessWidget {
  final Order order;
  final Preset preset;
  final int presetIndex;
  final bool isPreset;
  final void Function() onSubmit;

  OrderDetailsDialog(
      {Key key, order, this.onSubmit, this.preset, this.presetIndex})
      : order = preset?.toOrder() ?? order,
        isPreset = preset != null,
        assert(isPreset == (presetIndex != null)),
        super(key: key);

  @override
  Widget build(BuildContext context) {
    double screenHeight = MediaQuery.of(context).size.height;
    return GetBuilder<DetailsDialogModel>(
      init:
          DetailsDialogModel(order, onSubmit, currentPresetIndex: presetIndex),
      builder: (model) {
        return ConstrainedBox(
          constraints: BoxConstraints(maxHeight: screenHeight * 0.9),
          child: Scrollbar(
            child: SingleChildScrollView(
              child: Column(
                crossAxisAlignment: CrossAxisAlignment.start,
                mainAxisSize: MainAxisSize.min,
                children: [
                  Padding(
                    padding: EdgeInsets.only(top: 4, left: 4, right: 4),
                    child: Column(
                      mainAxisSize: MainAxisSize.min,
                      crossAxisAlignment: CrossAxisAlignment.start,
                      children: [
                        Container(
                            height: 300,
                            alignment: Alignment.topRight,
                            clipBehavior: Clip.hardEdge,
                            padding: const EdgeInsets.symmetric(
                                vertical: 16, horizontal: 16),
                            decoration: BoxDecoration(
                              borderRadius: BorderRadius.circular(16.0),
                              image: DecorationImage(
                                fit: BoxFit.cover,
                                image: AssetImage(
                                    "assets/images/" + order.dish.image),
                              ),
                            ),
                            child: order.isQuickOrder
                                ? null
                                : SwitchIconButton(
                                    iconWhenOff: MaterialCommunityIcons
                                        .content_save_outline,
                                    iconWhenOn:
                                        MaterialCommunityIcons.content_save,
                                    boxColorWhenOn: amber,
                                    initiallyEnabled: isPreset,
                                    enableIf: model.addPreset,
                                    disableIf: model.removePreset,
                                  )),
                        Padding(
                          padding: const EdgeInsets.only(left: 8, right: 8),
                          child: Column(
                            crossAxisAlignment: CrossAxisAlignment.start,
                            children: [
                              Row(
                                crossAxisAlignment: CrossAxisAlignment.start,
                                mainAxisAlignment:
                                    MainAxisAlignment.spaceBetween,
                                children: [
                                  Column(
                                    crossAxisAlignment:
                                        CrossAxisAlignment.start,
                                    children: [
                                      const SizedBox(height: 16),
                                      Text(order.dish.name,
                                          style: blacktext.extSzC.semfont),
                                      const SizedBox(height: 8),
                                      Row(
                                        children: [
                                          Text("PU: ",
                                              style: blacktext.szB.regfont),
                                          const SizedBox(width: 8),
                                          Wrap(
                                            spacing: 4,
                                            crossAxisAlignment:
                                                WrapCrossAlignment.end,
                                            children: [
                                              Text(order.dish.price.toString(),
                                                  style: blacktext
                                                      .extSzC.boldfont),
                                              Text(
                                                "MRU",
                                                style: blacktext.szA.regfont,
                                              )
                                            ],
                                          ),
                                        ],
                                      ),
                                    ],
                                  ),
                                  Column(
                                    crossAxisAlignment: CrossAxisAlignment.end,
                                    children: [
                                      const SizedBox(height: 14),
                                      SweetTitle(
                                        text: order.dish.categories.first.name,
                                        primaryColor:
                                            order.dish.categories.first.color,
                                      ),
                                      const SizedBox(height: 8),
                                      Row(
                                        children: [
                                          Text(
                                            isPreset
                                                ? "Créé le:"
                                                : "Ajouté le:",
                                          ),
                                          const SizedBox(width: 8),
                                          Builder(
                                            builder: (context) {
                                              var date = isPreset
                                                      ? preset.dateCreated
                                                      : model.dateAddedToBasket,
                                                  day = padZero(date.day),
                                                  month = padZero(date.month),
                                                  hour = padZero(date.hour),
                                                  minute = padZero(date.minute);

                                              return Text(
                                                "$day/$month ${hour}h:$minute",
                                                style: blacktext.extSzB.semfont,
                                              );
                                            },
                                          )
                                        ],
                                      )
                                    ],
                                  ),
                                ],
                              ),
                              const SizedBox(height: 16),
                              if (order.isQuickOrder)
                                SweetTitle(
                                  text: "Commande Rapide",
                                  primaryColor: midori,
                                  // boldColor: true,
                                ),
                              if (model.shouldDisplayCondiments)
                                Column(
                                  crossAxisAlignment: CrossAxisAlignment.start,
                                  children: [
                                    Text(
                                      "Préférences :",
                                      style: aoitext.szC.medfont,
                                    ),
                                    const SizedBox(height: 12),
                                    GetBuilder<DetailsDialogModel>(
                                      id: model.condimentsListGetID,
                                      builder: (model) {
                                        return Column(
                                          crossAxisAlignment:
                                              CrossAxisAlignment.start,
                                          children: [
                                            Wrap(
                                              spacing: 16,
                                              runSpacing: 8,
                                              children: List.generate(
                                                  model.preferedCondiments
                                                      .length, (index) {
                                                String pref = model
                                                    .preferedCondiments[index];
                                                return QuickOption(
                                                  color: aoi,
                                                  title: pref,
                                                  remover: () {
                                                    model.removeCondiment(
                                                        index);
                                                  },
                                                );
                                              }),
                                            ),
                                            if (order.customCondimentsPreference !=
                                                    null &&
                                                order.customCondimentsPreference
                                                        .trim()
                                                        .length >
                                                    0 &&
                                                !model
                                                    .shouldDeleteCustomPref) ...[
                                              const SizedBox(height: 16),
                                              Row(
                                                crossAxisAlignment:
                                                    CrossAxisAlignment.start,
                                                children: [
                                                  Padding(
                                                    padding: const EdgeInsets
                                                            .symmetric(
                                                        horizontal: 8),
                                                    child: Icon(
                                                      MaterialCommunityIcons
                                                          .pen,
                                                      color: aoi,
                                                    ),
                                                  ),
                                                  Container(
                                                    padding:
                                                        const EdgeInsets.only(
                                                            top: 16,
                                                            bottom: 16,
                                                            left: 16,
                                                            right: 8),
                                                    decoration: BoxDecoration(
                                                      color: aoi,
                                                      borderRadius:
                                                          BorderRadius.circular(
                                                              16),
                                                      // boxShadow: gshaded,
                                                    ),
                                                    child: Row(
                                                      children: [
                                                        Text(
                                                          order
                                                              .customCondimentsPreference,
                                                          style: whitetext
                                                              .szC.semfont,
                                                        ),
                                                        const SizedBox(width: 8),
                                                        GestureDetector(
                                                          onTap: model
                                                              .setUpCustomPreferenceDeletion,
                                                          child: CircledIcon(
                                                            iconData:
                                                                MaterialCommunityIcons
                                                                    .close,
                                                            color: aoi,
                                                            size:
                                                                CircledIconBoxSize
                                                                    .small,
                                                            colorStyle:
                                                                CircledIconColorStyle
                                                                    .white,
                                                          ),
                                                        )
                                                      ],
                                                    ),
                                                  ),
                                                ],
                                              ),
                                            ]
                                          ],
                                        );
                                      },
                                    ),
                                  ],
                                ),
                            ],
                          ),
                        ),
                      ],
                    ),
                  ),

                  // const SizedBox(height: 16),
                  if (model.shouldDisplayRestaurants)
                    Padding(
                      padding:
                          const EdgeInsets.only(left: 16, right: 16, top: 16),
                      child: Column(
                        crossAxisAlignment: CrossAxisAlignment.start,
                        children: [
                          Text(
                            "Restaurants :",
                            style: TextStyleSet(Colors.deepOrange).szC.medfont,
                          ),
                          const SizedBox(height: 16),
                          GetBuilder<DetailsDialogModel>(
                            id: model.restaurantsListGetID,
                            builder: (model) {
                              return Wrap(
                                spacing: 16,
                                runSpacing: 8,
                                children: List.generate(
                                    model.preferedRestos.length, (index) {
                                  String resto = model.preferedRestos[index];
                                  return QuickOption(
                                    color: Colors.deepOrange,
                                    title: "${index + 1} - $resto",
                                    remover: () {
                                      model.removeRestaurant(index);
                                    },
                                  );
                                }),
                              );
                            },
                          ),
                        ],
                      ),
                    ),
                  const SizedBox(height: 16),
                  Row(
                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                    crossAxisAlignment: CrossAxisAlignment.end,
                    children: [
                      Padding(
                        padding: const EdgeInsets.only(left: 8, bottom: 8),
                        child: Row(
                          mainAxisSize: MainAxisSize.min,
                          children: [
                            if (order.state == OrderState.delivered) ...[
                              const SizedBox(width: 8),
                              Text("Quantité:",
                                  style: blacktext.extSzC.regfont),
                              const SizedBox(width: 4),
                              Text(model.quantity.toString(),
                                  style: blacktext.extSzC.semfont),
                              SizedBox(
                                width: 16,
                              )
                            ] else if (order.state == OrderState.pending)
                              // * Quantity Control -->
                              GetBuilder<DetailsDialogModel>(
                                id: model.quantityControlGetID,
                                builder: (_) {
                                  return Row(
                                    mainAxisSize: MainAxisSize.min,
                                    children: [
                                      MyIconButton(
                                        boxShadow: gshaded,
                                        iconColor: Colors.black,
                                        icon:
                                            MaterialCommunityIcons.chevron_left,
                                        onTap: model.decreaseQty,
                                      ),
                                      Padding(
                                        padding: const EdgeInsets.symmetric(
                                            horizontal: 12),
                                        child: Text(
                                          model.quantity.toString(),
                                          style: blacktext.extSzC.boldfont,
                                        ),
                                      ),
                                      MyIconButton(
                                        boxShadow: gshaded,
                                        iconColor: Colors.black,
                                        icon: MaterialCommunityIcons
                                            .chevron_right,
                                        onTap: model.increaseQty,
                                      ),
                                    ],
                                  );
                                },
                              ),
                            // * -->
                            Padding(
                              padding: const EdgeInsets.only(
                                left: 12,
                              ),
                              child: ConstrainedBox(
                                constraints: BoxConstraints(
                                  maxHeight: 50,
                                  minHeight: 50,
                                  maxWidth: 80,
                                ),
                                child: FittedBox(
                                  fit: BoxFit.contain,
                                  child: GetBuilder<DetailsDialogModel>(
                                    id: model.totalPriceGetID,
                                    builder: (_) {
                                      return Text(
                                        model.totalPrice.toString(),
                                        style: blacktext.extSzC.semfont,
                                      );
                                    },
                                  ),
                                ),
                              ),
                            ),
                            Text("MRU", style: blacktext.szB.regfont)
                          ],
                        ),
                      ),
                      const SizedBox(width: 8),
                      if (order.state == OrderState.pending)
                        RadiusButton(
                          daColor: aoi,
                          title: isPreset ? "Au panier" : "Modifier",
                          onTap: isPreset
                              ? model.submitOrder
                              : model.submitChanges,
                        )
                      else if (order.state == OrderState.delivered)
                        Padding(
                          padding: const EdgeInsets.only(right: 16, bottom: 8),
                          child: Row(
                            children: [
                              CircledIcon(
                                color: midori,
                                iconData: MaterialCommunityIcons.check_all,
                              ),
                              const SizedBox(width: 8),
                              Text("Livrée", style: midoritext.szB.medfont),
                            ],
                          ),
                        ),
                    ],
                  )
                ],
              ),
            ),
          ),
        );
      },
    );
  }
}
